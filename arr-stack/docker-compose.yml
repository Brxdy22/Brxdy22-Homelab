version: "3"
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8085:8085 # qBitorrent
      - 8989:8989 # Sonarr
      - 9696:9696 # Prowlarr
      - 7878:7878 # Radarr
      - 8096:8096 # Jellyfin
    volumes:
      - /home/ubuntu/docker/arr-stack:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=openvpn
      # OpenVPN:
      - OPENVPN_USER= 
      - OPENVPN_PASSWORD= 
      # Wireguard:
      # - WIREGUARD_PRIVATE_KEY=<YOUR_PRIVATE_KEY> # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/providers/nordvpn.md#obtain-your-wireguard-private-key
      # - WIREGUARD_ADDRESSES=10.5.0.2/32
      # Timezone for accurate log times
      - TZ=America/Chicago
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=24h
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - WEBUI_PORT=8085
    volumes:
      - /home/ubuntu/docker/arr-stack/qbittorrent:/config
      - /home/ubuntu/docker/arr-stack/qbittorrent/downloads:/downloads
    depends_on:
      - gluetun
    restart: always

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/ubuntu/docker/arr-stack/sonarr/data:/config
      - /home/ubuntu/docker/arr-stack/sonarr/tvseries:/tv #optional
      - /home/ubuntu/docker/arr-stack/sonarr/downloadclient-downloads:/downloads #optional
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/ubuntu/docker/arr-stack/prowlarr/data:/config
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /home/ubuntu/docker/arr-stack/radarr/data:/config
      - /home/ubuntu/docker/arr-stack/radarr/movies:/tv #optional
      - /home/ubuntu/docker/arr-stack/radarr/downloadclient-downloads:/downloads
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: "service:gluetun"
    user: 1000:1000
    #group_add:
    #  - '109'  # This needs to be the group id of running `stat -c '%g' /dev/dri/renderD128` on the docker host
    environment:
      - TZ=America/Chicago
      - WEBUI_PORT=8086
    volumes:
      - /home/ubuntu/docker/jellyfin/config:/config
      - /home/ubuntu/docker/jellyfin/cache:/cache
      - /home/ubuntu/docker/jellyfin/Films:/Films:ro
      - /home/ubuntu/docker/jellyfin/TVShows:/TVShows:ro
      - /home/ubuntu/docker/jellyfin/Audiobooks:/Audiobooks:ro
      - /home/ubuntu/docker/jellyfin/Music:/Music:ro
    #devices:
    #  - /dev/dri/renderD128:/dev/dri/renderD128
    #  - /dev/dri/card0:/dev/dri/card0
    restart: unless-stopped
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.jellyfin.entrypoints=http"
    #  - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.piercehome.site`)"
    #  - "traefik.http.middlewares.jellyfin-https-redirect.redirectscheme.scheme=https"
    #  - "traefik.http.routers.jellyfin.middlewares=jellyfin-https-redirect"
    #  - "traefik.http.routers.jellyfin-secure.entrypoints=https"
    #  - "traefik.http.routers.jellyfin-secure.rule=Host(`jellyfin.piercehome.site`)"
    #  - "traefik.http.routers.jellyfin-secure.tls=true"
    #  - "traefik.http.routers.jellyfin-secure.service=jellyfin"
    #  - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    #  - "traefik.docker.network=proxy"
    #networks:
    #  proxy:
    #security_opt:
    #  - no-new-privileges:true

#networks:
 # proxy:
   # external: true